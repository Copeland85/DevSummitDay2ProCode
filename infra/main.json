{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "18214004695586675733"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      }
    },
    "project": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of the project"
      }
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      },
      "defaultValue": "eastus2"
    },
    "openAILocation": {
      "type": "string",
      "allowedValues": [
        "eastus",
        "eastus2",
        "westus"
      ],
      "metadata": {
        "azd": {
          "type": "location"
        },
        "description": "Location for the OpenAI resource group"
      }
    },
    "openAISku": {
      "type": "string",
      "defaultValue": "S0"
    },
    "openAIApiVersion": {
      "type": "string",
      "defaultValue": "2024-05-13"
    },
      "searchServiceIndexName": {
      "type": "string",
      "defaultValue": "icecream-chat"
    },
    "searchServiceSkuName": {
      "type": "string",
      "defaultValue": "standard"
    },
    "storageServiceSku": {
      "type": "object",
      "defaultValue": {
        "name": "Standard_LRS"
      }
    },
    "storageServiceImageContainerName": {
      "type": "string",
      "defaultValue": "images"
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "variables": {
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('name'), parameters('location')))]",
    "tags": {
      "azd-env-name": "[parameters('name')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('rg-{0}', parameters('name')))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "all-resources",
      "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('rg-{0}', parameters('name')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "resourceToken": {
            "value": "[variables('resourceToken')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "openai_api_version": {
            "value": "[parameters('openAIApiVersion')]"
          },
          "openAiLocation": {
            "value": "[parameters('openAILocation')]"
          },
          "openAiSkuName": {
            "value": "[parameters('openAISku')]"
          },
           "searchServiceIndexName": {
            "value": "[parameters('searchServiceIndexName')]"
          },
          "searchServiceSkuName": {
            "value": "[parameters('searchServiceSkuName')]"
          },
          "storageServiceSku": {
            "value": "[parameters('storageServiceSku')]"
          },
          "storageServiceImageContainerName": {
            "value": "[parameters('storageServiceImageContainerName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.29.47.4906",
              "templateHash": "18109441359842852578"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "azurechat-demo"
            },
            "resourceToken": {
              "type": "string"
            },
            "openai_api_version": {
              "type": "string"
            },
            "openAiLocation": {
              "type": "string"
            },
            "openAiSkuName": {
              "type": "string"
            },
            "searchServiceSkuName": {
              "type": "string",
              "defaultValue": "standard"
            },
            "searchServiceIndexName": {
              "type": "string",
              "defaultValue": "icecream-chat"
            },
            "storageServiceSku": {
              "type": "object"
            },
            "storageServiceImageContainerName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "openai_name": "[toLower(format('{0}-aillm-{1}', parameters('name'), parameters('resourceToken')))]",
            "search_name": "[toLower(format('{0}search{1}', parameters('name'), parameters('resourceToken')))]",
            "webapp_name": "[toLower(format('{0}-webapp-{1}', parameters('name'), parameters('resourceToken')))]",
            "appservice_name": "[toLower(format('{0}-app-{1}', parameters('name'), parameters('resourceToken')))]",
            "apim_name": "[toLower(format('{0}-apim-{1}', parameters('name'), parameters('resourceToken')))]",
            "aivision_name": "[toLower(format('{0}-aivision-{1}', parameters('name'), parameters('resourceToken')))]",
            "storage_prefix": "[take(parameters('name'), 8)]",
            "storage_name": "[toLower(format('{0}sto{1}', variables('storage_prefix'), parameters('resourceToken')))]",
            "kv_prefix": "[take(parameters('name'), 7)]",
            "keyVaultName": "[toLower(format('{0}-kv-{1}', variables('kv_prefix'), parameters('resourceToken')))]",
            "la_workspace_name": "[toLower(format('{0}-la-{1}', parameters('name'), parameters('resourceToken')))]",
            "diagnostic_setting_name": "AppServiceConsoleLogs",
            "keyVaultSecretsOfficerRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b86a8fe4-44ce-4948-aee5-eccb2c155cd7')]",
            "validStorageServiceImageContainerName": "[toLower(replace(parameters('storageServiceImageContainerName'), '-', ''))]",
            "llmDeployments": [
              {
                "name": "[parameters('chatGptDeploymentName')]",
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('chatGptModelName')]",
                  "version": "[parameters('chatGptModelVersion')]"
                },
                "sku": {
                  "name": "GlobalStandard",
                  "capacity": "[parameters('chatGptDeploymentCapacity')]"
                }
              },
              {
                "name": "[parameters('embeddingDeploymentName')]",
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('embeddingModelName')]",
                  "version": "2"
                },
                "capacity": "[parameters('embeddingDeploymentCapacity')]"
              }
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', variables('webapp_name'), 'logs')]",
              "properties": {
                "applicationLogs": {
                  "fileSystem": {
                    "level": "Verbose"
                  }
                },
                "detailedErrorMessages": {
                  "enabled": true
                },
                "failedRequestsTracing": {
                  "enabled": true
                },
                "httpLogs": {
                  "fileSystem": {
                    "enabled": true,
                    "retentionInDays": 1,
                    "retentionInMb": 35
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webapp_name'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-OPENAI-API-KEY')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('openai_name')), '2023-05-01').key1]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('openai_name'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-SEARCH-API-KEY')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('search_name')), '2022-09-01').secondaryKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Search/searchServices', variables('search_name'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-STORAGE-ACCOUNT-KEY')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name')), '2022-05-01').keys[0].value]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE_APIM_API_KEY')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[listKeys(resourceId('Microsoft.ApiManagement/service', variables('apim_name')), '2020-06-01').primaryKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.ApiManagement/service', variables('apim_name'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE_AIVISION_API_KEY')]",
              "properties": {
                "contentType": "text/plain",
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('aivision_name')), '2023-05-01').key1]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('aivision_name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', variables('storage_name'), 'default', variables('validStorageServiceImageContainerName'))]",
              "properties": {
                "publicAccess": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_name'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', variables('storage_name'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]"
              ]
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[variables('appservice_name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "reserved": true
              },
              "sku": {
                "name": "P0v3",
                "tier": "Premium0V3",
                "size": "P0v3",
                "family": "Pv3",
                "capacity": 1
              },
              "kind": "linux"
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[variables('webapp_name')]",
              "location": "[parameters('location')]",
              "tags": "[union(parameters('tags'), createObject('azd-service-name', 'frontend'))]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appservice_name'))]",
                "httpsOnly": true,
                "siteConfig": {
                  "linuxFxVersion": "node|18-lts",
                  "alwaysOn": true,
                  "appCommandLine": "next start",
                  "ftpsState": "Disabled",
                  "minTlsVersion": "1.2",
                  "appSettings": [
                    {
                      "name": "AZURE_KEY_VAULT_NAME",
                      "value": "[variables('keyVaultName')]"
                    },
                    {
                      "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                      "value": "true"
                    },
                    {
                      "name": "AZURE_OPENAI_API_KEY",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-OPENAI-API-KEY')]"
                    },
                    {
                      "name": "AZURE_OPENAI_API_INSTANCE_NAME",
                      "value": "[variables('openai_name')]"
                    },
                    {
                      "name": "AZURE_SEARCH_API_KEY",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-SEARCH-API-KEY')]"
                    },
                    {
                      "name": "AZURE_SEARCH_NAME",
                      "value": "[variables('search_name')]"
                    },
                    {
                      "name": "AZURE_SEARCH_INDEX_NAME",
                      "value": "[parameters('searchServiceIndexName')]"
                    },
                    {
                      "name": "AZURE_STORAGE_ACCOUNT_NAME",
                      "value": "[variables('storage_name')]"
                    },
                    {
                      "name": "AZURE_STORAGE_ACCOUNT_KEY",
                      "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-STORAGE-ACCOUNT-KEY')]"
                    }
                  ]
                }
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appservice_name'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-OPENAI-API-KEY')]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-SEARCH-API-KEY')]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-STORAGE-ACCOUNT-KEY')]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-12-01-preview",
              "name": "[variables('la_workspace_name')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', variables('webapp_name'))]",
              "name": "[variables('diagnostic_setting_name')]",
              "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('la_workspace_name'))]",
                "logs": [
                  {
                    "category": "AppServiceConsoleLogs",
                    "enabled": true
                  }
                ],
                "metrics": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('la_workspace_name'))]",
                "[resourceId('Microsoft.Web/sites', variables('webapp_name'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
              "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), variables('webapp_name'), variables('keyVaultSecretsOfficerRole'))]",
              "properties": {
                "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('webapp_name')), '2020-06-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('keyVaultSecretsOfficerRole')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Web/sites', variables('webapp_name'))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2021-06-01-preview",
              "name": "[variables('keyVaultName')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enableRbacAuthorization": true,
                "enabledForDeployment": false,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": false
              }
            },

            {
              "type": "Microsoft.Search/searchServices",
              "apiVersion": "2022-09-01",
              "name": "[variables('search_name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "partitionCount": 1,
                "publicNetworkAccess": "enabled",
                "replicaCount": 1
              },
              "sku": {
                "name": "[parameters('searchServiceSkuName')]"
              }
            },
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[variables('openai_name')]",
              "location": "[parameters('openAiLocation')]",
              "tags": "[parameters('tags')]",
              "kind": "OpenAI",
              "properties": {
                "customSubDomainName": "[variables('openai_name')]",
                "publicNetworkAccess": "Enabled"
              },
              "sku": {
                "name": "[parameters('openAiSkuName')]"
              }
            },
            {
              "copy": {
                "name": "llmdeployment",
                "count": "[length(variables('llmDeployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', variables('openai_name'), variables('llmDeployments')[copyIndex()].name)]",
              "properties": {
                "model": "[variables('llmDeployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(variables('llmDeployments')[copyIndex()], 'raiPolicyName'), variables('llmDeployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": "[if(contains(variables('llmDeployments')[copyIndex()], 'sku'), variables('llmDeployments')[copyIndex()].sku, createObject('name', 'Standard', 'capacity', variables('llmDeployments')[copyIndex()].capacity))]",
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', variables('openai_name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[variables('storage_name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "StorageV2",
              "sku": "[parameters('storageServiceSku')]"
            }
          ],
          "outputs": {
            "url": {
              "type": "string",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('webapp_name')), '2020-06-01').defaultHostName)]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('rg-{0}', parameters('name'))))]"
      ]
    }
  ],
  "outputs": {
    "APP_URL": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('rg-{0}', parameters('name')))), 'Microsoft.Resources/deployments', 'all-resources'), '2022-09-01').outputs.url.value]"
    },
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    }
  }
}